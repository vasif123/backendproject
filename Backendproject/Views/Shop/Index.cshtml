@model List<Clothes>
@{
    List<Color> colors = ViewBag.Colors;
    List<Size> sizes = ViewBag.Sizes;
}


<!-- Breadcrumb Start -->
<div class="container-fluid">
    <div class="row px-xl-5">
        <div class="col-12">
            <nav class="breadcrumb bg-light mb-30">
                <a class="breadcrumb-item text-dark" asp-controller="home" asp-action="index">Home</a>
                <a class="breadcrumb-item text-dark" asp-controller="shop" asp-action="index">Shop</a>
                <span class="breadcrumb-item active">Shop List</span>
            </nav>
        </div>
    </div>
</div>
<!-- Breadcrumb End -->
<!-- Shop Start -->
<div class="container-fluid">
    <div class="row px-xl-5">
        <!-- Shop Sidebar Start -->
        <div class="col-lg-3 col-md-4">
            <!-- Price Start -->
            <h5 class="section-title position-relative text-uppercase mb-3"><span class="bg-secondary pr-3">Filter by price</span></h5>
            <div class="bg-light p-4 mb-30">
                <form>
                    <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                        <input type="checkbox" class="custom-control-input" checked id="price-all">
                        <label class="custom-control-label" for="price-all">All Price</label>
                        <span class="badge border font-weight-normal">1000</span>
                    </div>
                    <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                        <input type="checkbox" class="custom-control-input" id="price-1">
                        <label class="custom-control-label" for="price-1">$0 - $100</label>
                        <span class="badge border font-weight-normal">150</span>
                    </div>
                    <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                        <input type="checkbox" class="custom-control-input" id="price-2">
                        <label class="custom-control-label" for="price-2">$100 - $200</label>
                        <span class="badge border font-weight-normal">295</span>
                    </div>
                    <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                        <input type="checkbox" class="custom-control-input" id="price-3">
                        <label class="custom-control-label" for="price-3">$200 - $300</label>
                        <span class="badge border font-weight-normal">246</span>
                    </div>
                    <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                        <input type="checkbox" class="custom-control-input" id="price-4">
                        <label class="custom-control-label" for="price-4">$300 - $400</label>
                        <span class="badge border font-weight-normal">145</span>
                    </div>
                    <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between">
                        <input type="checkbox" class="custom-control-input" id="price-5">
                        <label class="custom-control-label" for="price-5">$400 - $500</label>
                        <span class="badge border font-weight-normal">168</span>
                    </div>
                </form>
            </div>
            <!-- Price End -->
            <!-- Color Start -->
            <h5 class="section-title position-relative text-uppercase mb-3"><span class="bg-secondary pr-3">Filter by color</span></h5>
            <div class="bg-light p-4 mb-30">
                <form>
                    @{int colorCount = 0;}
                    @{
                        colors.ForEach(c => colorCount += c.ClothesColors.Count);
                    }
                    <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                        <input style="width:100%" type="checkbox" class="custom-control-input" checked id="color-all">
                        <label class="custom-control-label" for="color-all">All Sizes</label>
                        <span class="badge border font-weight-normal">
                            @colorCount
                        </span>
                    </div>
                    @foreach (Color color in colors)
                    {
                        <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                            <input style="width:100%" type="checkbox" class="custom-control-input">
                            <label class="custom-control-label">@color.Name</label>
                            <span class="badge border font-weight-normal">@color.ClothesColors.Count</span>
                        </div>

                    }

                </form>
            </div>
            <!-- Color End -->
            <!-- Size Start -->
            <h5 class="section-title position-relative text-uppercase mb-3"><span class="bg-secondary pr-3">Filter by size</span></h5>
            <div class="bg-light p-4 mb-30">
                <form>
                    @{int sizeCount = 0;}
                    @{
                        sizes.ForEach(s => sizeCount += s.ColorSizes.Count);
                    }
                    <div  class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                        <input style="width:100%" type="checkbox" class="custom-control-input" checked>
                        <label class="custom-control-label" for="size-all">All Size</label>
                        <span class="badge border font-weight-normal">@sizeCount</span>
                    </div>
                    @foreach (Size size in sizes)
                    {
                        <div  class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                            <input style="width:100%" type="checkbox" class="custom-control-input" >
                            <label class="custom-control-label" >@size.Name</label>
                            <span class="badge border font-weight-normal">@size.ColorSizes.Count</span>
                        </div>
                    }

                </form>
            </div>
            <!-- Size End -->
        </div>
        <!-- Shop Sidebar End -->
        <!-- Shop Product Start -->
        <div class="col-lg-9 col-md-8">
            <div id="products-content" class="row pb-3">
                <div class="col-12 pb-1">
                    <div class="d-flex align-items-center justify-content-between mb-4">
                        <div>
                            <button class="btn btn-sm btn-light"><i class="fa fa-th-large"></i></button>
                            <button class="btn btn-sm btn-light ml-2"><i class="fa fa-bars"></i></button>
                        </div>
                        <div class="ml-2">
                            <div id="product-sorting" class="btn-group">
                                <button type="button" class="btn btn-sm btn-light dropdown-toggle" data-toggle="dropdown">Sorting</button>
                                <div class="dropdown-menu dropdown-menu-right">
                                    <a id="latest" class="dropdown-item" asp-controller="shop" asp-action="getdatas" asp-route-sortingOrder="@("Latest")">Latest</a>
                                    <a id="a-z" class="dropdown-item" asp-controller="shop" asp-action="getdatas" asp-route-sortingOrder="@("A-Z")">A-Z</a>
                                    <a id="z-a" class="dropdown-item" asp-controller="shop" asp-action="getdatas" asp-route-sortingOrder="@("Z-A")">Z-A</a>
                                    <a id="z-a" class="dropdown-item" asp-controller="shop" asp-action="getdatas" asp-route-sortingOrder="@("Price by ascending")">Price by ascending</a>
                                    <a id="z-a" class="dropdown-item" asp-controller="shop" asp-action="getdatas" asp-route-sortingOrder="@("Price by descending")">Price by descending</a>

                                </div>
                            </div>
                            <div class="btn-group ml-2">
                                <button type="button" class="btn btn-sm btn-light dropdown-toggle" data-toggle="dropdown">Showing</button>
                                <div class="dropdown-menu dropdown-menu-right">
                                    <a class="dropdown-item" href="#">10</a>
                                    <a class="dropdown-item" href="#">20</a>
                                    <a class="dropdown-item" href="#">30</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row pb-3" id="partial-products-container">

                    @await Html.PartialAsync("_ClothesPartialView", Model.Take(9))
                </div>
                <div class="col-12">
                    <nav>
                        <ul class="pagination justify-content-center">
                            <li class="page-item disabled"><a class="page-link" href="#">Previous</a></li>
                            <li class="page-item active"><a class="page-link" href="#">1</a></li>
                            <li class="page-item"><a class="page-link" href="#">2</a></li>
                            <li class="page-item"><a class="page-link" href="#">3</a></li>
                            <li class="page-item"><a class="page-link" href="#">Next</a></li>
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
        <!-- Shop Product End -->
    </div>
</div>
<!-- Shop End -->

@section ShopSorting{
    <script>
        const productSortingElement = document.querySelector("#product-sorting");
        const partialProductContainer = document.querySelector("#partial-products-container");
        const latest = productSortingElement.querySelector("#latest");
        const alphabeticOrder = productSortingElement.querySelector("#a-z");
        const reverseAlphabeticOrder = productSortingElement.querySelector("#z-a");

        productSortingElement.addEventListener("click", (e) => {
            e.preventDefault();
            const currentTargetId = e.target.id;
            console.log(currentTargetId)
            const currentTargetHref = e.target.getAttribute("href");
            console.log(currentTargetHref)

            if (currentTargetId === latest.id
                || currentTargetId === alphabeticOrder.id
                || currentTargetId === reverseAlphabeticOrder.id)
            {
                fetch(currentTargetHref).then(res => res.text())
                    .then(data => partialProductContainer.innerHTML = data);
            }
        })
    </script>
}